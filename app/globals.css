@tailwind base;
@tailwind components;
@tailwind utilities;

/* Hides Up and Down selection keys in input field of number type */
@layer utilities {
  .no-spinners {
    /* Hide spinners in Chrome, Safari, Edge, and Opera */
    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      @apply appearance-none m-0;
    }

    /* Hide spinners in Firefox */
    & {
      @apply appearance-none;
    }
  }
}

:root {
  --bg: white;
  --textColor: black;
  --softBg: #f0f0f0;
  --softTextColor: #626262;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
  max-width: 100vw;
  overflow-x: hidden;
}

a {
  text-decoration: none;
  color: inherit;
}

.dark {
  --bg: #0f172a;
  --textColor: #ddd;
  --softBg: #1f273a;
  --softTextColor: #a6a6a6;
}

.bodyContainer {
  min-height: 100vh;
  background-color: var(--bg);
  color: var(--textColor);
}

.loader {
  width: 48px;
  height: 48px;
  border: 10px solid #fff;
  border-radius: 50%;
  position: relative;
  transform: rotate(45deg);
  box-sizing: border-box;
}
.loader::before {
  content: "";
  position: absolute;
  box-sizing: border-box;
  inset: -10px;
  border-radius: 50%;
  border: 10px solid rgb(5, 5, 25, 0.6);
  animation: prixClipFix 2s infinite linear;
}

@keyframes prixClipFix {
  0% {
    clip-path: polygon(50% 50%, 0 0, 0 0, 0 0, 0 0, 0 0);
  }
  25% {
    clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 0, 100% 0, 100% 0);
  }
  50% {
    clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 100% 100%, 100% 100%);
  }
  75% {
    clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 0 100%, 0 100%);
  }
  100% {
    clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 0 100%, 0 0);
  }
}
